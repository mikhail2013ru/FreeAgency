window.ITVDN={},function(){var e=document.querySelector(".arrow-down"),t=document.querySelector(".form"),n=document.querySelector(".nav");e&&e.addEventListener("click",function(e){e.preventDefault(),ITVDN.form.open()}),t&&t.addEventListener("submit",function(e){e.preventDefault(),ITVDN.form.isValid()?console.log("All good"):console.log("Is not valid")}),n&&n.addEventListener("click",function(e){var t=e.target;"a"===t.tagName.toLowerCase()&&(e.preventDefault(),ITVDN.navigation.toggleToActiveLink(t))})}(),function(){var e={},t=document.querySelector(".form-container"),n=null;function o(t){t.preventDefault(),e.close(),n.removeEventListener("click",o)}e.open=function(){t.classList.remove("is-hidden"),(n=document.querySelector(".form__close-button")).addEventListener("click",o)},e.close=function(){t.classList.add("is-hidden")},e.isValid=function(){var t=document.querySelectorAll('[data-valid="required"]'),n=document.querySelector("[data-email]").value,o=document.querySelector("[data-number]").value;return e.isAllCompleted(t)?ITVDN.validation.isEmail(n)?!!ITVDN.validation.isNumber(o)||(console.log("Неверный номер!"),!1):(console.log("Неверный email!"),!1):(console.log("Заполните, пожалуйста, все поля!"),!1)},e.isAllCompleted=function(e){for(var t=!0,n=0;n<e.length;n++)if(!ITVDN.validation.isNotEmpty(e[n].value)){t=!1;break}return t},ITVDN.form=e}(),function(){var e={isEmail:function(e){return/^[0-9a-z_-]+@[0-9a-z_-]+\.[a-z]{2,5}$/i.test(e)},isNumber:function(e){return/^\d+$/.test(e)},isNotEmpty:function(e){return Boolean(e)}};ITVDN.validation=e}(),function(){var e={};let t=document.querySelector("a.button"),n=document.querySelector(".footer"),o=document.querySelector(".form-container");console.log(t),t.addEventListener("click",function(e){e.preventDefault(),o.classList.remove("is-hidden"),n.scrollIntoView({behavior:"smooth"})}),this.addEventListener("keydown",function(e){27===e.keyCode&&o.classList.add("is-hidden")}),e.toggleToActiveLink=function(e){let t=document.querySelectorAll(".nav__link"),n=e.dataset.link;for(let e=0;e<t.length;e++)t[e].classList.contains("nav__link--active")&&t[e].classList.remove("nav__link--active");e.classList.add("nav__link--active"),function(e){document.querySelector("."+e).scrollIntoView({behavior:"smooth",block:"start"})}(n)},ITVDN.navigation=e}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
